/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login;

import com.mycompany.mantenimiento_paula.Conectar;
import com.mycompany.mantenimiento_paula.main;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import profesor.screenProfesor;
import tecnico.screenTecnico;

/**
 *
 * @author damA
 */
public class loginTecnico extends javax.swing.JDialog {

    Conectar conectar = new Conectar();

    // Usuario y contraseña
    public String user;
    public String pass;
    
    // Para saber si el usuario esta activo o no
    String activo;
    String a;

    /**
     * Creates new form loginTecnico
     */
    public loginTecnico(java.awt.Frame parent, boolean modal) {
        
        conectar.getConexion();
        
        a = activo;
        
        initComponents();
        
        iconoPrograma();
        iconosLabel();
        
        saberActivo();

    }

    // METODO PARA PONER ICONO AL PROGRAMA
    public void iconoPrograma() {
        main m = new main();
        m.iconoPrograma();;
    }

    // Iconos para usuario y contraseña
    public void iconosLabel() {
        jLabel2.setIcon(new ImageIcon("src\\main\\java\\resources\\usuario.png"));
        jLabel3.setIcon(new ImageIcon("src\\main\\java\\resources\\padlock.png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcbMostrarOcultar1 = new javax.swing.JCheckBox();
        jtxtUsuarioT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jbtnEntrarP = new javax.swing.JButton();
        jbtnVolverP = new javax.swing.JButton();
        jpassTecnico = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(null);
        setResizable(false);
        setSize(new java.awt.Dimension(400, 300));

        jcbMostrarOcultar1.setText("Ver");
        jcbMostrarOcultar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMostrarOcultar1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Técnico");

        jLabel1.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANTENIMIENTO INSTITUTO");

        jbtnEntrarP.setText("ENTRAR");
        jbtnEntrarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEntrarPActionPerformed(evt);
            }
        });

        jbtnVolverP.setText("VOLVER");
        jbtnVolverP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnVolverPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnVolverP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnEntrarP))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jpassTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbMostrarOcultar1))
                            .addComponent(jtxtUsuarioT, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(37, 37, 37)
                        .addComponent(jtxtUsuarioT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbMostrarOcultar1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpassTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnVolverP)
                    .addComponent(jbtnEntrarP))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // JCheckBox para mostrar u ocultar la contraseña
    private void jcbMostrarOcultar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMostrarOcultar1ActionPerformed
        if (jcbMostrarOcultar1.isSelected()) {
            jpassTecnico.setEchoChar((char) 0);
        } else {
            jpassTecnico.setEchoChar('*');
        }
    }//GEN-LAST:event_jcbMostrarOcultar1ActionPerformed

    // Boton entrar
    private void jbtnEntrarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEntrarPActionPerformed
        loginT();
        jtxtUsuarioT.setName(null);
        jpassTecnico.setName(null);
    }//GEN-LAST:event_jbtnEntrarPActionPerformed

    // Boton volver
    private void jbtnVolverPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnVolverPActionPerformed
        this.setVisible(false);
        new main().setVisible(true);
    }//GEN-LAST:event_jbtnVolverPActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbtnEntrarP;
    private javax.swing.JButton jbtnVolverP;
    private javax.swing.JCheckBox jcbMostrarOcultar1;
    private javax.swing.JPasswordField jpassTecnico;
    private javax.swing.JTextField jtxtUsuarioT;
    // End of variables declaration//GEN-END:variables

    // Metodo para el login del técnico
    private void loginT() {
        Connection cn = conectar.getConexion();

        PreparedStatement ps = null;
        ResultSet rs = null;

        user = jtxtUsuarioT.getText();
        pass = String.valueOf(jpassTecnico.getPassword());

        // Realiza correctamente la actividad de no permitir que el usuario entre en el programa si el usuario que introduce 
        //  no corresponde con su rol o si este esta inactivo
        int rol = 2;
        a = "1";

        if (user.equals("") || pass.equals("")) {

            JOptionPane.showMessageDialog(this, "Si quieres entrar no dejes los campos vacios :( .", "Campos vacíos", 0);

        } else if (rol == rol) {

            try {

                if (a==a) {
                    
                    ps = cn.prepareStatement("Select login, password, activo, id_rol from mantenimiento_dusa_p.fp_profesor where login = '" + user + "' and password = '" + pass + "' and id_rol = '" + rol + "' and activo = '" + a + "'");
                    rs = ps.executeQuery();
                    
                    if (rs.next()) {
                        
                        this.setVisible(false);
                        screenTecnico s = new screenTecnico(this, true, user);
                        s.setVisible(true);
                        
                    } else {
                        // Solo muestra este mensaje si el usuario esta inactivo o si no corresponde con su rol
                        JOptionPane.showMessageDialog(this, "ERROR!!\nEl usuario introducio no corresponde o esta inactivo");
                    }                                       
                    
                }else{
                    // Si el usuario no esta activo no muestra este mensaje
                    //JOptionPane.showConfirmDialog(null, "El usuario introducido esta inactivo.", "Usuario Inactivo", 2);
                }
                
                 cn.close();

            } catch (SQLException e) {
                System.err.println(e.toString());
            }
            
        } else {
            // Por aqui nunca entra
            //JOptionPane.showConfirmDialog(null, "El usuario introducido no corresponde a Técnico", "Error Log In", 0);
        }
    }

    // Metodo para recoger el estado de activo
    private void saberActivo() {
        Connection conexion = conectar.getConexion();

        try {

            PreparedStatement ps = conexion.prepareStatement("select activo from fp_profesor where activo = '" + activo + "';");

            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                a = rs.getString(1);
            }

            conexion.close();

        } catch (SQLException ex) {
            Logger.getLogger(screenProfesor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
