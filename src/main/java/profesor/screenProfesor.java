/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package profesor;

import com.mycompany.mantenimiento_paula.Conectar;
import com.mycompany.mantenimiento_paula.main;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Logger;
import javax.swing.JMenuItem;

/**
 *
 * @author damA
 */
public class screenProfesor extends javax.swing.JDialog {

    Conectar conectar = new Conectar();
    
    String usuario;
    String id;
    
    DefaultTableModel dtm = new DefaultTableModel();
   
    
    
    private void popmenu(){
        
       JMenuItem modificar = new JMenuItem ("Modificar incidencia");
       jppm.add(modificar);
       
       jt_profesor.setComponentPopupMenu(jppm);
       
       modificar.addActionListener(new ActionListener() { 
           @Override
           public void actionPerformed(ActionEvent e) {
               
               //String descripcion = (String) dtm.getValueAt(jt_profesor.getSelectedRow(), 0);
              
               modify_incidencia add = new modify_incidencia(screenProfesor.this, true, usuario);
               add.setVisible(true);
                
               verIncidencias();
           }
       });
       
    }
    
    /**
     * Creates new form jd_mainProfesor
     *
     * @param <error>
     */
    public screenProfesor(javax.swing.JDialog parent, boolean modal, String user) {
        
        conectar.getConexion();

        initComponents();

        usuario = user;

        saberId();
        verIncidencias();
        
        icono();
        
        popmenu();

        
    }

    // METODO QUE HE CREADO EN LA PANTALLA PRINCIPAL PARA EL ICONO Y LO LLAMO AQUI.
    public void icono(){
        main m = new main();
        m.iconoPrograma();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jppm = new javax.swing.JPopupMenu();
        jsp_profesor = new javax.swing.JScrollPane();
        jt_profesor = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jbtnSalirP = new javax.swing.JButton();
        jbtn_buscar = new javax.swing.JButton();
        jtxt_buscar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jmb_profesor = new javax.swing.JMenuBar();
        jmi_mas = new javax.swing.JMenu();
        jmi_verProfesores = new javax.swing.JMenuItem();
        jmi_add = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jt_profesor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jsp_profesor.setViewportView(jt_profesor);

        jLabel1.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INCIDENCIAS");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jbtnSalirP.setText("SALIR");
        jbtnSalirP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalirPActionPerformed(evt);
            }
        });

        jbtn_buscar.setText("Buscar");
        jbtn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_buscarActionPerformed(evt);
            }
        });

        jtxt_buscar.setToolTipText("AAAA-MM-DD");

        jLabel2.setText("Buscar por descripción:");

        jmi_mas.setText("Más...");
        jmi_mas.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        jmi_verProfesores.setText("Enviar Correo");
        jmi_verProfesores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_verProfesoresActionPerformed(evt);
            }
        });
        jmi_mas.add(jmi_verProfesores);

        jmi_add.setText("Nueva Incidencia");
        jmi_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_addActionPerformed(evt);
            }
        });
        jmi_mas.add(jmi_add);

        jmb_profesor.add(jmi_mas);

        setJMenuBar(jmb_profesor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jsp_profesor, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtn_buscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnSalirP, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, 0)
                .addComponent(jsp_profesor, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSalirP)
                    .addComponent(jbtn_buscar)
                    .addComponent(jtxt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // BOTON PARA SALIR
    private void jbtnSalirPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalirPActionPerformed
        dispose();
    }//GEN-LAST:event_jbtnSalirPActionPerformed
    
    // OPCION DE MENU BAR PARA AÑADIR UNA NUEVA INCIDENCIA
    private void jmi_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_addActionPerformed
       add_incidencia add = new add_incidencia(this, true, usuario);
       add.setVisible(true);
       
       verIncidencias();
    }//GEN-LAST:event_jmi_addActionPerformed

    // OPCION DEL MENU BAR PARA VER LOS PROFESORES
    private void jmi_verProfesoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_verProfesoresActionPerformed
        verProfesores vp = new verProfesores(this, true);
        vp.setVisible(true);
    }//GEN-LAST:event_jmi_verProfesoresActionPerformed

    // BOTON PARA BUSCAR UNA INCIDENCIA EN CONCRETO SEGUN LA FECHA
    private void jbtn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_buscarActionPerformed

        buscar();
    }//GEN-LAST:event_jbtn_buscarActionPerformed

    // MOSTRAR INCIDENCIAS EN EL JTABLE
    public void verIncidencias() {

        dtm.setColumnIdentifiers(new String[]{"Nombre", "Descripción", "Fecha", "Ubicación", "Observaciones"});
        
        //String buscar = jtxt_buscar.getText().toString();

        String[] a = new String[5];

        conectar = new Conectar();
        Connection conexion = conectar.getConexion();
     
        dtm.setRowCount(0);
        try {

            PreparedStatement ps = conexion.prepareStatement("select p.nombre_completo, m.descripcion, m.fecha, u.ubicacion, m.observaciones\n"
                    + "from man_incidencias m inner join fp_profesor p on p.id_profesor = m.id_profesor_crea\n"
                    + "inner join man_ubicacion u on u.id_ubicacion = m.id_ubicacion\n"
                    + "where m.id_profesor_crea = '"+id+"'");

            ResultSet rs = ps.executeQuery();
            
            String nombre = null;
            String descripcion = null;
            String fecha = null;
            String ubicacion = null;
            String observaciones = null;

            while (rs.next()) {
                
                a[0] = rs.getString(1);
                a[1] = rs.getString(2);
                a[2] = rs.getString(3);
                a[3] = rs.getString(4);
                a[4] = rs.getString(5);

                dtm.addRow(a);
            }
            
            jt_profesor.setModel(dtm);

        } catch (SQLException ex) {
            Logger.getLogger(screenProfesor.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbtnSalirP;
    private javax.swing.JButton jbtn_buscar;
    private javax.swing.JMenuBar jmb_profesor;
    private javax.swing.JMenuItem jmi_add;
    private javax.swing.JMenu jmi_mas;
    private javax.swing.JMenuItem jmi_verProfesores;
    private javax.swing.JPopupMenu jppm;
    private javax.swing.JScrollPane jsp_profesor;
    private javax.swing.JTable jt_profesor;
    private javax.swing.JTextField jtxt_buscar;
    // End of variables declaration//GEN-END:variables

    // METODO PARA AVERIGUAR EL ID 
    private void saberId() {
        
        conectar = new Conectar();
        Connection conexion = conectar.getConexion();

        try {

            PreparedStatement ps = conexion.prepareStatement("select id_profesor from fp_profesor where login = '" + usuario + "';");

            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                id = rs.getString(1);
            }

        } catch (SQLException ex) {
            Logger.getLogger(screenProfesor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void buscar() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
        
}
