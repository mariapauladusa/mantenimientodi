/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package profesor;

import administrador.add_usuario;
import administrador.ver_profesores;
import com.mycompany.mantenimiento_paula.Conectar;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author damA
 */
public class profe_modifyInci extends javax.swing.JDialog {

    Conectar conectar = new Conectar();

    // Relacionado con el id del usuario correspondiente
    String usuario;
    String id;

    // Para saber el id de la incidencia para ponder modificar
    String idIn;

    /**
     * Creates new form modify_incidencia
     */
    public profe_modifyInci(javax.swing.JDialog parent, boolean modal, String user, String idInci) {

        super(parent, modal);
        conectar.getConexion();

        initComponents();

        usuario = user;
        idIn = idInci;

        saberId();
        icono();

        rellenarBox();
        rellenarDatos();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        // X de la pantalla
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                dispose();
                profe_screen screen = new profe_screen(profe_modifyInci.this, true, usuario);
                screen.setVisible(true);
            }
        });
    }

    // Icono del programa
    public void icono() {
        ImageIcon img = new ImageIcon("src\\main\\java\\resources\\icon.png");
        this.setIconImage(img.getImage());
    }

    // Metodo para saber el id del usuario correspondiente
    private void saberId() {
        Connection conexion = conectar.getConexion();

        try {

            PreparedStatement ps = conexion.prepareStatement("select id_profesor from fp_profesor where login = '" + usuario + "';");
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                id = rs.getString(1);
            }

            conexion.close();

        } catch (SQLException ex) {
            Logger.getLogger(profe_screen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Metodo para modificar una incidencia
    public void modificarIncidencia() {

        String descripcion = jtxta_descr.getText();
        String fecha = jtxt_fecha.getText();
        String ubicacion = (String) jcbo_ubs.getSelectedItem();
        String observaciones = jtxta_obsv.getText();

        String[] s = ubicacion.toString().split(" - ");
        String ubi = s[0];

        Connection conexion = conectar.getConexion();

        try {

            PreparedStatement ps = conexion.prepareStatement("UPDATE man_incidencias set id_incidencia='" + idIn + "',descripcion='" + descripcion + "',fecha='" + fecha + "',id_ubicacion='" + ubi + "',observaciones='" + observaciones + "' where id_incidencia = '" + idIn + "'");
            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Datos insertados.");

            conexion.close();

        } catch (SQLException ex) {

            Logger.getLogger(profe_addInci.class.getName()).log(Level.SEVERE, null, ex);
        }

        dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxta_obsv = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jbtn_crear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtxta_descr = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jtxt_fecha = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jlbl_ubis = new javax.swing.JLabel();
        jcbo_ubs = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(909, 598));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Observaciones:");

        jtxta_obsv.setColumns(20);
        jtxta_obsv.setRows(5);
        jScrollPane2.setViewportView(jtxta_obsv);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MODIFICAR INCIDENCIA");

        jbtn_crear.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbtn_crear.setText("Guardar");
        jbtn_crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_crearActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Descripción:");

        jtxta_descr.setColumns(20);
        jtxta_descr.setRows(5);
        jScrollPane1.setViewportView(jtxta_descr);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Fecha:");

        jtxt_fecha.setToolTipText("AAAA-MM-DD");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Ubicación:");

        jlbl_ubis.setForeground(new java.awt.Color(255, 0, 0));
        jlbl_ubis.setText("Tu ubicación anterior era:");

        jcbo_ubs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbo_ubsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbl_ubis, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jcbo_ubs, javax.swing.GroupLayout.Alignment.LEADING, 0, 202, Short.MAX_VALUE)
                                .addComponent(jtxt_fecha, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addContainerGap(220, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtn_crear)
                        .addGap(52, 52, 52))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtn_crear))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtxt_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbl_ubis)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jcbo_ubs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Boton crear
    private void jbtn_crearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_crearActionPerformed
        modificarIncidencia();
    }//GEN-LAST:event_jbtn_crearActionPerformed

    private void jcbo_ubsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbo_ubsActionPerformed
        rellenarBox();
    }//GEN-LAST:event_jcbo_ubsActionPerformed

    private void rellenarBox() {
        Connection conexion = conectar.getConexion();

        try {

            PreparedStatement ps = conexion.prepareStatement("SELECT distinct id_ubicacion, ubicacion FROM man_ubicacion");
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                jcbo_ubs.addItem(rs.getString("id_ubicacion") + " - " + rs.getString("ubicacion"));
            }

            conexion.close();

        } catch (SQLException ex) {
            Logger.getLogger(profe_addInci.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtn_crear;
    private javax.swing.JComboBox<String> jcbo_ubs;
    private javax.swing.JLabel jlbl_ubis;
    private javax.swing.JTextField jtxt_fecha;
    private javax.swing.JTextArea jtxta_descr;
    private javax.swing.JTextArea jtxta_obsv;
    // End of variables declaration//GEN-END:variables

    // Metodo para rellenar el JDialog con los datos existentes en la tabla dependiendo de que columna se ha seleccionado
    private void rellenarDatos() {

        Connection conexion = conectar.getConexion();

        try {

            PreparedStatement ps = conexion.prepareStatement("select m.id_incidencia, p.nombre_completo, m.descripcion, m.fecha, u.ubicacion, m.observaciones\n"
                    + "from man_incidencias m inner join fp_profesor p on p.id_profesor = m.id_profesor_crea\n"
                    + "inner join man_ubicacion u on u.id_ubicacion = m.id_ubicacion\n"
                    + "where m.id_incidencia = '" + idIn + "'");

            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                jtxta_descr.setText(rs.getString(3));
                jtxt_fecha.setText(rs.getString(4));
                jlbl_ubis.setText("La ubicación anterior era: " + rs.getString(5));
                jtxta_obsv.setText(rs.getString(6));
            }

            conexion.close();

        } catch (SQLException ex) {
            Logger.getLogger(profe_screen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
